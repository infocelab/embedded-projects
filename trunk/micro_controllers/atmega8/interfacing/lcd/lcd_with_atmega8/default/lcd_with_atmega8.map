Archive member included because of file (symbol)

c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_divmodhi4.o)
                              lcd.o (__divmodhi4)
c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
                              c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o (exit)
c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_copy_data.o)
                              lcd_with_atmega8.o (__do_copy_data)
c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_clear_bss.o)
                              lcd_with_atmega8.o (__do_clear_bss)
c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_divmodhi4.o) (__udivmodhi4)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
LOAD lcd_with_atmega8.o
LOAD lcd.o
LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a
LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4\libc.a
LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x388
 *(.vectors)
 .vectors       0x00000000       0x26 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 .init4         0x00000048       0x10 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_clear_bss.o)
                0x00000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000058        0x4 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000005c        0x2 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
                0x0000005c                __vector_1
                0x0000005c                __vector_12
                0x0000005c                __bad_interrupt
                0x0000005c                __vector_6
                0x0000005c                __vector_3
                0x0000005c                __vector_11
                0x0000005c                __vector_13
                0x0000005c                __vector_17
                0x0000005c                __vector_7
                0x0000005c                __vector_5
                0x0000005c                __vector_4
                0x0000005c                __vector_9
                0x0000005c                __vector_2
                0x0000005c                __vector_15
                0x0000005c                __vector_8
                0x0000005c                __vector_14
                0x0000005c                __vector_10
                0x0000005c                __vector_16
                0x0000005c                __vector_18
 .text          0x0000005e       0xb8 lcd_with_atmega8.o
                0x0000005e                main
 .text          0x00000116      0x220 lcd.o
                0x000001b8                LCDWriteString
                0x000002c0                LCDInit
                0x0000016a                LCDByte
                0x00000116                LCDBusyLoop
                0x000001e8                LCDWriteInt
                0x0000029e                LCDGotoXY
 .text          0x00000336        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_divmodhi4.o)
 .text          0x00000336        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
 .text          0x00000336        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_copy_data.o)
 .text          0x00000336        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_clear_bss.o)
 .text          0x00000336        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_udivmodhi4.o)
                0x00000336                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000336       0x26 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_divmodhi4.o)
                0x00000336                __divmodhi4
                0x00000336                _div
 .text.libgcc   0x0000035c        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x0000035c        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x0000035c        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000035c       0x28 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_udivmodhi4.o)
                0x0000035c                __udivmodhi4
                0x00000384                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000384        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
                0x00000384                exit
                0x00000384                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000384        0x4 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x00000388                _etext = .

.data           0x00800060       0x82 load address 0x00000388
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060       0x42 lcd_with_atmega8.o
 .data          0x008000a2       0x40 lcd.o
                0x008000a2                __cgram
 .data          0x008000e2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_divmodhi4.o)
 .data          0x008000e2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
 .data          0x008000e2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_copy_data.o)
 .data          0x008000e2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_clear_bss.o)
 .data          0x008000e2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008000e2                . = ALIGN (0x2)
                0x008000e2                _edata = .
                0x008000e2                PROVIDE (__data_end, .)

.bss            0x008000e2        0x0
                0x008000e2                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000e2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
 .bss           0x008000e2        0x0 lcd_with_atmega8.o
 .bss           0x008000e2        0x0 lcd.o
 .bss           0x008000e2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_divmodhi4.o)
 .bss           0x008000e2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
 .bss           0x008000e2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_copy_data.o)
 .bss           0x008000e2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_clear_bss.o)
 .bss           0x008000e2        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
                0x008000e2                PROVIDE (__bss_end, .)
                0x00000388                __data_load_start = LOADADDR (.data)
                0x0000040a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000e2        0x0
                0x008000e2                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000e2                PROVIDE (__noinit_end, .)
                0x008000e2                _end = .
                0x008000e2                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 lcd_with_atmega8.o
 .debug_aranges
                0x00000020       0x20 lcd.o

.debug_pubnames
                0x00000000       0x92
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b lcd_with_atmega8.o
 .debug_pubnames
                0x0000001b       0x77 lcd.o

.debug_info     0x00000000      0x79b
 *(.debug_info)
 .debug_info    0x00000000      0x12c lcd_with_atmega8.o
 .debug_info    0x0000012c      0x66f lcd.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x290
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xaf lcd_with_atmega8.o
 .debug_abbrev  0x000000af      0x1e1 lcd.o

.debug_line     0x00000000      0x5d9
 *(.debug_line)
 .debug_line    0x00000000      0x187 lcd_with_atmega8.o
 .debug_line    0x00000187      0x452 lcd.o

.debug_frame    0x00000000       0x90
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 lcd_with_atmega8.o
 .debug_frame   0x00000020       0x70 lcd.o

.debug_str      0x00000000      0x1b7
 *(.debug_str)
 .debug_str     0x00000000       0xf1 lcd_with_atmega8.o
                                0x125 (size before relaxing)
 .debug_str     0x000000f1       0xc6 lcd.o
                                0x1dc (size before relaxing)

.debug_loc      0x00000000      0x386
 *(.debug_loc)
 .debug_loc     0x00000000       0x8b lcd_with_atmega8.o
 .debug_loc     0x0000008b      0x2fb lcd.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(lcd_with_atmega8.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x60
 .debug_ranges  0x00000000       0x18 lcd_with_atmega8.o
 .debug_ranges  0x00000018       0x48 lcd.o
