C51 COMPILER V9.52.0.0   IR_MODULE                                                         03/30/2015 05:53:39 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE IR_MODULE
OBJECT MODULE PLACED IN ir module.OBJ
COMPILER INVOKED BY: G:\Program Files\Keil\C51\BIN\C51.EXE ir module.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg51.h>
   2          #define on 0
   3          #define off 1
   4          #define reset 1
   5          int scan=2;
   6          
   7          //for first segment
   8          int count_1=0;
   9          int runtime_1 = 30;
  10          sbit R1 = P2^0;
  11          sbit Y1 = P2^1;
  12          sbit G1 = P2^2;
  13          sbit SS_CLK_1 = P2^3;
  14          sbit SS_RST_1 = P2^4;
  15          sbit module1_1 = P0^0;
  16          
  17          //for second segment
  18          int count_2=0;
  19          int runtime_2 = 30;
  20          sbit R2 = P3^0;
  21          sbit Y2 = P3^1;
  22          sbit G2 = P3^2;
  23          sbit SS_CLK_2 = P3^4;
  24          sbit SS_RST_2 = P3^3;
  25          sbit module2_1 = P0^1;
  26          
  27          
  28          
  29          void msDelay(unsigned int x)
  30          {
  31   1           unsigned int i,j;
  32   1           for(i=0;i<x;i++)
  33   1           for(j=0;j<775;j++);
  34   1      }
  35          
  36          void ss_reset(int d)
  37          {
  38   1        switch(d)
  39   1        {
  40   2            case 1:
  41   2             SS_RST_1=1;
  42   2             msDelay(50);
  43   2             SS_RST_1=0;
  44   2             msDelay(50);
  45   2            break;
  46   2          case 2:
  47   2             SS_RST_2=1;
  48   2             msDelay(50);
  49   2             SS_RST_2=0;
  50   2             msDelay(50);
  51   2          break;
  52   2          
  53   2          case 3:
  54   2            
  55   2          
C51 COMPILER V9.52.0.0   IR_MODULE                                                         03/30/2015 05:53:39 PAGE 2   

  56   2          break;
  57   2          
  58   2          case 4:
  59   2            
  60   2          
  61   2          break;
  62   2      
  63   2      
  64   2        }   
  65   1        
  66   1        
  67   1      }
  68          
  69          
  70          void clock(int d)
  71          {
  72   1        switch(d)
  73   1        {
  74   2          case 1:
  75   2             count_1++;
  76   2             SS_CLK_1=1;
  77   2             msDelay(50);
  78   2             SS_CLK_1=0;
  79   2             msDelay(50);
  80   2          break;
  81   2          case 2:
  82   2             count_2++;
  83   2             SS_CLK_2=1;
  84   2             msDelay(50);
  85   2             SS_CLK_2=0;
  86   2             msDelay(50);
  87   2          
  88   2          break;
  89   2          
  90   2          case 3:
  91   2            
  92   2          
  93   2          break;
  94   2          
  95   2          case 4:
  96   2            
  97   2          
  98   2          break;
  99   2          
 100   2          
 101   2          
 102   2          
 103   2        }
 104   1        
 105   1      }
 106          void main()
 107          {
 108   1      P2=0x00;
 109   1      P0=0xFF;
 110   1        R1=off;
 111   1        Y1=off;
 112   1        G1=off;
 113   1        R2=off;
 114   1        Y2=off;
 115   1        G2=off;
 116   1        R1=on;
 117   1        R2=on;
C51 COMPILER V9.52.0.0   IR_MODULE                                                         03/30/2015 05:53:39 PAGE 3   

 118   1          while(1)
 119   1           { 
 120   2             
 121   2             switch(scan)
 122   2             {
 123   3               case 1:
 124   3                  // scan first segment
 125   3                  if(count_1 == 0)
 126   3                  {
 127   4                    if( module1_1 == 1)
 128   4                    {
 129   5                      runtime_1=60;
 130   5                    }
 131   4                    else
 132   4                    {
 133   5                      runtime_1=30;
 134   5                    }
 135   4                  }
 136   3                  R1=off;
 137   3                  G1=on;
 138   3                  clock(1);
 139   3                  if(count_1 >= runtime_1)
 140   3                  {
 141   4                    count_1=0;
 142   4                    ss_reset(1);
 143   4                    scan=2;
 144   4                    G1=off;
 145   4                    Y1=on;
 146   4                    msDelay(3000);
 147   4                    Y1=off;
 148   4                    R1=on;
 149   4                  }
 150   3               break;
 151   3                case 2:
 152   3                  // scan second segment
 153   3                  if(count_2 == 0)
 154   3                  {
 155   4                    if( module2_1 == 1)
 156   4                    {
 157   5                      runtime_2=60;
 158   5                    }
 159   4                    else
 160   4                    {
 161   5                      runtime_2=30;
 162   5                    }
 163   4                  }
 164   3                  R2=off;
 165   3                  G2=on;
 166   3                  clock(2);
 167   3                  if(count_2 >= runtime_2)
 168   3                  {
 169   4                    count_2=0;
 170   4                    ss_reset(2);
 171   4                    scan=1;
 172   4                    G2=off;
 173   4                    Y2=on;
 174   4                    msDelay(3000);
 175   4                    Y2=off;
 176   4                    R2=on;
 177   4                  }
 178   3               break;
 179   3            }
C51 COMPILER V9.52.0.0   IR_MODULE                                                         03/30/2015 05:53:39 PAGE 4   

 180   2             
 181   2            
 182   2           }
 183   1      }
 184           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    321    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
